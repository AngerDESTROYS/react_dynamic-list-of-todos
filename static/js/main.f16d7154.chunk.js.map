{"version":3,"sources":["components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/Enums/FilterBy.tsx","components/TodoModal/TodoModal.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoSelect","selectedTodo","className","map","todo","id","completed","title","type","onClick","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","TodoModal","closeModal","useState","loading","setLoading","name","email","user","setUser","useEffect","userId","userData","catch","finally","href","TodoFilter","selectedStatus","onFilterChange","onTextChange","filterText","value","onChange","e","selectedValue","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","App","setSelectedStatus","setFilterText","setSelectedTodo","setTodos","todosData","error","console","filteredTodos","filter","toLowerCase","includes","trim","status","text","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f16d7154.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[]\n  todoSelect: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<TodoListProps> = (\n  {\n    todos, todoSelect, selectedTodo,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={todo === selectedTodo ? 'has-background-info-light' : ''}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>{todo.title}</p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => todoSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={`far ${todo === selectedTodo ? 'fa-eye-slash' : 'fa-eye'}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterBy {\n  ALL = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n}\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype TodoModalProps = {\n  selectedTodo: Todo | null;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = (\n  { selectedTodo, closeModal },\n) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({ name: '', email: '' });\n\n  useEffect(() => {\n    if (selectedTodo) {\n      setLoading(true);\n      getUser(selectedTodo.userId)\n        .then(userData => {\n          setUser(userData);\n        })\n        .catch(() => {\n          // eslint-disable-next-line no-console\n          setUser({ name: 'no user found', email: '' });\n        })\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={`has-text-${selectedTodo?.completed ? 'success' : 'danger'}`}>\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { FilterBy } from '../Enums/FilterBy';\n\ntype TodoFilterProps = {\n  selectedStatus: FilterBy;\n  onFilterChange: (status: FilterBy) => void;\n  onTextChange: (text: string) => void;\n  filterText: string;\n};\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  selectedStatus,\n  onFilterChange,\n  onTextChange,\n  filterText,\n}) => {\n  const handleStatusChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = e.target.value as FilterBy;\n\n    onFilterChange(selectedValue);\n  };\n\n  const handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onTextChange(e.target.value);\n  };\n\n  const handleClearInput = () => {\n    onTextChange('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedStatus}\n            onChange={handleStatusChange}\n          >\n            <option value={FilterBy.ALL}>All</option>\n            <option value={FilterBy.ACTIVE}>Active</option>\n            <option value={FilterBy.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterText}\n          onChange={handleTextChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filterText !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterBy } from './components/Enums/FilterBy';\nimport { TodoFilter } from './components/TodoFilter';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [selectedStatus, setSelectedStatus] = useState(FilterBy.ALL);\n  const [filterText, setFilterText] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const handleFilterChange = (status: FilterBy) => {\n    setSelectedStatus(status);\n  };\n\n  const handleTextChange = (text: string) => {\n    setFilterText(text);\n  };\n\n  const handleTodoClick = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then((todosData: Todo[]) => {\n        setTodos(todosData);\n        setLoading(false);\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error('Error fetching todos:', error);\n      });\n  }, []);\n\n  const filteredTodos = todos.filter(todo => {\n    return (\n      (selectedStatus === FilterBy.ALL || (selectedStatus === FilterBy.ACTIVE && !todo.completed)\n        || (selectedStatus === FilterBy.COMPLETED && todo.completed))\n      && (filterText === '' || todo.title.toLowerCase()\n        .includes(filterText.toLowerCase().trim()))\n    );\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedStatus={selectedStatus}\n                onFilterChange={handleFilterChange}\n                onTextChange={handleTextChange}\n                filterText={filterText}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {!loading && <TodoList todos={filteredTodos} todoSelect={handleTodoClick} selectedTodo={selectedTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (<TodoModal selectedTodo={selectedTodo} closeModal={handleModalClose} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}