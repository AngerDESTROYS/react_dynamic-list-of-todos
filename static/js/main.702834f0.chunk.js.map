{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoSelect","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","onFilterChange","onTextChange","useState","selectedStatus","setSelectedStatus","filterText","setFilterText","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeModal","loading","setLoading","name","email","user","setUser","useEffect","userId","userData","catch","error","console","finally","href","App","setSelectedTodo","setTodos","todosData","filteredTodos","filter","toLowerCase","includes","status","text","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.702834f0.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[]\n  todoSelect: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<TodoListProps> = (\n  {\n    todos, todoSelect, selectedTodo,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={todo === selectedTodo ? 'has-background-info-light' : ''}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>{todo.title}</p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => todoSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={`far ${todo === selectedTodo ? 'fa-eye-slash' : 'fa-eye'}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import {\n  useState, ChangeEvent,\n} from 'react';\n\ntype TodoFilterProps = {\n  onFilterChange: (status: string) => void;\n  onTextChange: (text: string) => void;\n};\n\nexport const TodoFilter: React.FC<TodoFilterProps> = (\n  { onFilterChange, onTextChange },\n) => {\n  const [selectedStatus, setSelectedStatus] = useState('all');\n  const [filterText, setFilterText] = useState('');\n\n  const handleStatusChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedStatus(e.target.value);\n    onFilterChange(e.target.value);\n  };\n\n  const handleTextChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setFilterText(e.target.value);\n    onTextChange(e.target.value);\n  };\n\n  const handleClearInput = () => {\n    setFilterText('');\n    onTextChange('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedStatus}\n            onChange={handleStatusChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterText}\n          onChange={handleTextChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filterText && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype TodoModalProps = {\n  selectedTodo: Todo | null;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = (\n  { selectedTodo, closeModal },\n) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({ name: '', email: '' });\n\n  useEffect(() => {\n    if (selectedTodo) {\n      setLoading(true);\n      getUser(selectedTodo.userId)\n        .then(userData => {\n          setUser(userData);\n        })\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.error(error);\n        })\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={`has-text-${selectedTodo?.completed ? 'success' : 'danger'}`}>\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [selectedStatus, setSelectedStatus] = useState('all');\n  const [filterText, setFilterText] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const handleFilterChange = (status: string) => {\n    setSelectedStatus(status);\n  };\n\n  const handleTextChange = (text: string) => {\n    setFilterText(text);\n  };\n\n  const handleTodoClick = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    getTodos().then((todosData: Todo[]) => {\n      setTodos(todosData);\n      setLoading(false);\n    });\n  }, []);\n\n  const filteredTodos = todos.filter(todo => {\n    return (\n      (selectedStatus === 'all' || (selectedStatus === 'active' && !todo.completed)\n        || (selectedStatus === 'completed' && todo.completed))\n      && (filterText === '' || todo.title.toLowerCase()\n        .includes(filterText.toLowerCase()))\n    );\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilterChange={handleFilterChange} onTextChange={handleTextChange} />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {!loading && <TodoList todos={filteredTodos} todoSelect={handleTodoClick} selectedTodo={selectedTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (<TodoModal selectedTodo={selectedTodo} closeModal={handleModalClose} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}